{"version":3,"sources":["components/AddTask.js","components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","App.js","reportWebVitals.js","index.js"],"names":["AddTask","onAdd","useState","name","setName","date","setDate","time","setTime","reminder","setReminder","className","onSubmit","e","preventDefault","alert","htmlFor","type","placeholder","value","onChange","target","currentTarget","checked","Button","text","color","handleClick","onClick","style","backgroundColor","Header","title","showForm","onToggleForm","defaultProps","Task","task","onDelete","onToggle","onDoubleClick","id","cursor","Tasks","tasks","map","App","mockTasks","Date","toDateString","setTasks","showAddTaskForm","setShowAddTaskForm","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5d52908.chunk.js","sourcesContent":["import {useState} from 'react';\n\nexport default function AddTask({onAdd}) {\n\n  const [name, setName] = useState('');\n  const [date, setDate] = useState('');\n  const [time, setTime] = useState('');\n  const [reminder, setReminder] = useState(false);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (!name) {\n      alert(\"Please Add Task Information\");\n      return;\n    }\n\n    onAdd({\n      name,\n      date,\n      time,\n      reminder,\n    });\n\n    setName('');\n    setDate('');\n    setTime('');\n    setReminder(false);\n  }\n\n  return (\n    <form className=\"add-form\" onSubmit={onSubmit}>\n      <div className=\"form-control\">\n        <label htmlFor=\"name\">Task</label>\n        <input \n          name=\"name\" type=\"text\" placeholder=\"Add Task\" \n          value={name} onChange={(e) => setName(e.target.value)} />\n      </div>\n      <div className=\"form-control\">\n        <label htmlFor=\"date\">Day</label>\n        <input \n          name=\"date\" type=\"date\"\n          value={date} onChange={(e) => setDate(e.target.value)} />\n      </div>\n      <div className=\"form-control\">\n        <label htmlFor=\"time\">Time</label>\n        <input \n          name=\"time\" type=\"time\"\n          value={time} onChange={(e) => setTime(e.target.value)} />\n      </div>\n      <div className=\"form-control form-control-check\">\n        <label htmlFor=\"reminder\">Set Reminder</label>\n        <input \n          name=\"reminder\" type=\"checkbox\" \n          value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}\n          checked={reminder}/>\n      </div>\n      \n      <input type=\"submit\" className=\"btn btn-block\" value=\"Save Task\" />\n    </form>\n  )\n}\n","import PropTypes from 'prop-types'\n\nexport default function Button({text, color, handleClick}) {\n  return (\n    <button \n      className=\"btn\" \n      onClick = {handleClick}\n      style={{backgroundColor: color}}>\n      {text}\n    </button>\n  )\n}\n\nButton.defaultProps = {\n  color: 'black'\n};\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string,\n  handleClick: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Button from './Button';\n\nexport default function Header({title, showForm, onToggleForm}) {\n\n  return (\n    <header className=\"header\">\n      <h1>{title}</h1>\n      <Button \n        text={showForm ? 'Close' : 'Add'}\n        color={showForm ? 'red' : 'green'}\n        handleClick={() => onToggleForm(!showForm)}\n        />\n    </header>\n  )\n}\n\nHeader.defaultProps = {\n  title: 'React'\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n  showForm: PropTypes.bool.isRequired,\n  onToggleForm: PropTypes.func.isRequired,\n}\n\n/* CSS in JS */\n// const headingStyle = {\n//   color: \"red\", \n//   backgroundColor: 'black'\n// };\n","import {FaTimes} from 'react-icons/fa';\n\nexport default function Task({task, onDelete, onToggle}) {\n\n  return (\n    <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\n      <h3 key={task.id}>\n        {task.name} \n         <FaTimes \n           style={{color: 'red', cursor:'pointer'}}\n           onClick={() => onDelete(task.id)}/>\n      </h3>\n      {task.date} {task.time ? ` - ${task.time}` : ''}\n      {/* <p>{task.date.toDateString()} - {task.date.toLocaleTimeString()}</p> */}\n      \n    </div>\n  )\n}\n","import Task from './Task';\n\nexport default function Tasks({tasks, onDelete, onToggle}) {\n\n  return (\n    <>\n      {tasks.map((task) => \n          <Task \n            key={task.id} \n            task={task}\n            onDelete={onDelete}\n            onToggle={onToggle}/>)}\n    </>\n  )\n}\n","import {useState} from 'react';\nimport AddTask from './components/AddTask';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\n\nfunction App() {\n  const mockTasks = [\n    {\n      id: 1,\n      name: 'Task1',\n      date: (new Date(2021, 7, 1)).toDateString(),\n      time: '',\n      reminder: true,\n    },\n    {\n      id: 2,\n      name: 'Task2',\n      date: (new Date(2021, 7, 2)).toDateString(),\n      time: '19:11',\n      reminder: false,\n    },\n    {\n      id: 3,\n      name: 'Task3',\n      date: (new Date(2021, 7, 3)).toDateString(),\n      time: '',\n      reminder: true,\n    },\n  ];\n\n  const [tasks, setTasks] = useState(mockTasks);\n  const [showAddTaskForm, setShowAddTaskForm] = useState(false);\n\n  // Add Task\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = {id, ...task};\n    setTasks([...tasks, newTask]);\n  }\n\n  // Delete Task\n  const deleteTask = (id) => setTasks(tasks.filter((task) => task.id !== id));\n\n  // Toggle Reminder\n  const toggleReminder = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? {...task, reminder: !task.reminder} : task,\n      ),\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <Header title=\"Task Tracker\" showForm={showAddTaskForm} onToggleForm={setShowAddTaskForm}/>\n      {showAddTaskForm && <AddTask onAdd={addTask} /> }\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        'No Tasks'\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}